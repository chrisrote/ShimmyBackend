{
  "name": "angular-wizard",
  "description": "Easy to use Wizard library for AngularJS",
  "version": "0.4.0",
  "filename": "angular-wizard.min.js",
  "main": "./dist/angular-wizard.min.js",
  "homepage": "https://github.com/mgonto/angular-wizard",
  "author": {
    "name": "Martin Gontovnikas",
    "email": "martin@gon.to"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/mgonto/angular-wizard.git"
  },
  "engines": {
    "node": ">= 0.9"
  },
  "keywords": [
    "angular",
    "client",
    "browser",
    "wizard",
    "form",
    "steps"
  ],
  "maintainers": [
    {
      "name": "Martin Gontovnikas"
    }
  ],
  "dependencies": {},
  "devDependencies": {
    "grunt-bower": "*",
    "grunt-bower-task": "*",
    "grunt-zip": "*",
    "grunt": "~0.4.1",
    "grunt-recess": "~0.3.0",
    "grunt-contrib-clean": "~0.4.1",
    "grunt-contrib-copy": "~0.4.1",
    "grunt-contrib-concat": "~0.3.0",
    "grunt-contrib-uglify": "~0.2.0",
    "grunt-karma": "~0.5.0",
    "grunt-ngmin": "0.0.2",
    "grunt-html2js": "~0.1.3",
    "grunt-conventional-changelog": "~0.1.1",
    "grunt-bump": "0.0.6"
  },
  "scripts": {
    "test": "grunt travis --verbose"
  },
  "license": "MIT",
  "readme": "# Angular-Wizard\n\n[![PayPayl donate button](http://img.shields.io/paypal/donate.png?color=yellow)](https://www.paypal.com/cgi-bin/webscr?cmd=_donations&business=martin%40gon%2eto&lc=US&item_name=Martin%20Gontovnikas&currency_code=USD&bn=PP%2dDonationsBF%3abtn_donateCC_LG%2egif%3aNonHosted \"Donate once-off to this project using Paypal\")\n[![Donate on Gittip](http://badgr.co/gittip/mgonto.png)](https://www.gittip.com/mgonto/)\n\n\nAngular-wizard is a component that will make it easy for you to create wizards in your app. You can check a running example of the wizard [by clicking here](http://mgonto.github.io/angular-wizard/)\n\n# How do I add this to my project?\nYou can download this by:\n\n* Using bower and running bower install angular-wizard\n* Using npm and running npm install angular-wizard\n* Downloading it manually by getting the files from the dist folder\n* Using JsDelivr CDN files:\n\n````html\n<!-- Use LATEST folder to always get the latest version-->\n<script type=\"text/javascript\" src=\"http://cdn.jsdelivr.net/angular.wizard/latest/angular-wizard.js\"></script>\n<link rel=\"stylesheet\" type=\"text/css\" href=\"http://cdn.jsdelivr.net/angular.wizard/latest/angular-wizard.css\">\n\n<!-- Or use TAG number for specific version -->\n<script type=\"text/javascript\" src=\"http://cdn.jsdelivr.net/angular-wizard/0.1.0/angular.wizard.js\"></script>\n<link rel=\"stylesheet\" type=\"text/css\" href=\"http://cdn.jsdelivr.net/angular.wizard/0.1.0/angular-wizard.css\">\n````\n\nThe dist folder contains the following files:\n\n* JS files needed for the directives and services\n* CSS files with default styles for the directive\n* LESS file with styles for the directive. If you have less in your project, I recommend using the less instead of the CSS since it has variables to configure Wizard colors.\n\n# Dependencies\nAngular-wizard depends on Angular and Lodash (or Underscore).\n\n# Starter Guide\n\n## First example\n\nThe first thing we need to do is add a dependency to angular-wizard module which is called `mgo-angular-wizard`.\n\nWe can do this simply by doing: \n\n````js\nangular.module('your-app', ['mgo-angular-wizard']);\n````\n\nNow, in some HTML for a controller, you can just add a wizard as follows:\n\n````html\n<wizard on-finish=\"finishedWizard()\"> \n    <wz-step title=\"Starting\">\n        <h1>This is the first step</h1>\n        <p>Here you can use whatever you want. You can use other directives, binding, etc.</p>\n        <input type=\"submit\" wz-next value=\"Continue\" />\n    </wz-step>\n    <wz-step title=\"Continuing\">\n        <h1>Continuing</h1>\n        <p>You have continued here!</p>\n        <input type=\"submit\" wz-next value=\"Go on\" />\n    </wz-step>\n    <wz-step title=\"More steps\">\n        <p>Even more steps!!</p>\n        <input type=\"submit\" wz-next value=\"Finish now\" />\n    </wz-step>\n</wizard>\n````\n\nThis will look like the following when you're in the second step:\n\n[![Looks like](http://f.cl.ly/items/2J0X0l2e3u3Q0R0q2C1Z/Screen%20Shot%202014-01-29%20at%206.14.29%20PM.png)](http://f.cl.ly/items/2J0X0l2e3u3Q0R0q2C1Z/Screen%20Shot%202014-01-29%20at%206.14.29%20PM.png)\n\nLet's go step by step to see how this works.\n\n1) You need to declare a master `wizard` directive. This wizard directive, has the following options as attributes:\n* **on-finish**: Here you can put a function to be called when the wizard is finished. The syntaxis here is very similar to `ng-click`\n* **name**: The name of the wizard. By default, it's called \"Default wizard\". It's used for the `WizardHandler` which we'll explain later.\n* **edit-mode**: If set to true, this will set the wizard as edit mode. Edit mode means that all steps have been completed byt he can modify any of them now. Defaults to false.\n* **hide-indicators**: If set to true, the indicators in the bottom of the page showing the current page and allowing navigation for the wizard will be hidden. Defaults to false.\n* **current-step**: You need to set here a property from your scope (similar to `ng-model`) and that property will always have the name of the current step being shown on the screen.\n* **template**: Path to a custom template.\n\n2) Inside the wizard, we can have as many steps as we want. Each step MUST have a title which is going to be used to identify it. Inside each step, we can put whatever we want. Other directives, bindings, controls, forms, etc.\n\n3) Inside the step, we now see a button which has a `wz-next` attribute. That means that clicking that button will send the user to the next step of wizard. Similar to `wz-next`, we have the following attributes:\n* **wz-previous**: Goes to the previous step\n* **wz-cancel**: Goes back to the first step\n* **wz-finish**: Finishes the wizard and calls the on-finish later on. It's important to note that if we're in the last step and we put `wz-next` it'll be the same as putting `wz-finish` as the wizard will know we're at the last screen.\n\nAll of this attributes can receive an optional function to be called before changing the step. Something like:\n\n````html\n<input type=\"button\" wz-next=\"setMode(mode)\" value=\"Next\" />\n````\n\nIn this case, the `setMode` function will be called before going to the next step.\n\n## Manipulating the wizard from a service\nThere're some times where we actually want to manipulate the wizard from the controller instead of from the HTML.\n\nFor those cases, we can inject the `WizardHandler` to our controller.\n\nThe main function of this service is the `wizard(name)` which will let you get the wizard to manipulate it. If you have just one wizard in the screen and you didn't set a name to it, you can just call it as `wizard()`. Let's see an example:\n\n````html\n<wz-step title=\"Cool step\">\n    <input type=\"submit\" ng-click=\"changeLabelAndGoNext()\" />\n</wz-step>\n````\n\n````js\n// In your controller\n$scope.changeLabelAndGoNext = function() {\n    $scope.model.label = \"Hola Gonto\";\n    WizardHandler.wizard().next();\n}\n````\n\nIn this case, we're changing a label and moving forward on the steps.\nThe functions available in the `wizard()` are:\n* **next**: Goes to the next step\n* **previous**: Goes to the previous step\n* **finish**: Finishes the wizard.\n* **goTo(number|title)**: This goes to the indicated step. It can receive either the number of the step (starting from 0) or the title of the step to go to.\n\n## Navigation bar\n\nThe navigation bar shown below works in the following way:\n\n* Completed steps are painted as green\n* Current step is painted as dark grey\n* Future step is painted as light grey\n* Editing step (Modifying a step already completed in the past) is painted as red\n* You can click in any completed step to go back to that step. You can't click in the current step nor in the future ones unless you've already completed a future step before (for example in EditMode all steps are completed by default)\n\nAll of those colors are variables in the `angular-wizard.less`. You can easily change them by changing the colors in that file\n\n# Contributors\n\n@sebazelonka helped me with all fo the styles of the Wizard.\n\n# Live sample\n\nYou can check out a live sample of the Wizard [clicking here](http://mgonto.github.io/angular-wizard/)\n\n# Releases Notes\nReleases notes are together with releases in GitHub at: https://github.com/mgonto/angular-wizard/releases\n\n\n# License\nThe MIT License\n\nCopyright (c) 2013 Martin Gontovnikas http://www.gon.to/\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n[![Bitdeli Badge](https://d2weczhvl823v0.cloudfront.net/mgonto/angular-wizard/trend.png)](https://bitdeli.com/free \"Bitdeli Badge\")\n\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/mgonto/angular-wizard/issues"
  },
  "_id": "angular-wizard@0.4.0",
  "dist": {
    "shasum": "2421ccaaf6257674e64321e822a0120f4a2e3a42"
  },
  "_from": "angular-wizard@latest",
  "_resolved": "https://registry.npmjs.org/angular-wizard/-/angular-wizard-0.4.0.tgz"
}
